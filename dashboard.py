import streamlit as st
import pandas as pd
import os
from PIL import Image

# Title
st.title('Quant Strategy Performance Dashboard')

# Load performance metrics
@st.cache_data
def load_metrics():
    df = pd.read_csv('evaluation_summary.csv')
    return df

metrics_df = load_metrics = pd.read_csv('evaluation_summary.csv')

st.header('ðŸ“Š Performance Metrics')
st.dataframe(metrics_df := pd.read_csv('evaluation_summary.csv'), use_container_width=True)

st.sidebar.header('Available Plots')
plot_choices = [
    'Cumulative Return',
    # 'Rolling Sharpe Ratio (60-Day)',
    # 'Rolling Volatility (60-Day)',
    'Scatter vs BTC/ETH',
    'Monthly Returns Heatmap',
    'Unlevered Returns Distribution',
    'Drawdown'
]

selected_plot = st.sidebar.selectbox('Select Plot to View:', plot_choices)

plot_files = {
    'Cumulative Return': 'cumulative_return_unlevered.png',
    # 'Rolling Sharpe Ratio (60-Day)': 'rolling_sharpe_unlevered.png',
    # 'Rolling Volatility (60-Day)': 'rolling_vol_unlevered.png',
    'Scatter vs BTC/ETH': 'scatter_strategy_vs_btc.png',
    'Monthly Returns Heatmap': 'monthly_returns_heatmap.png',
    'Cumulative Return (Levered)': 'cumulative_return_levered.png',
    'Unlevered Returns Distribution': 'distribution_unlevered_returns.png',
    'Drawdown Over Time': 'drawdown_unlevered.png'
}

selected_plot = st.sidebar.selectbox("Select plot to display:", plot_choices)

plot_path = os.path.join('plots')

plot_files = {
    'Cumulative Return': 'cumulative_return_unlevered.png',
    # 'Rolling Sharpe Ratio (60-Day)': 'rolling_sharpe_unlevered.png',
    # 'Rolling Volatility (60-Day)': 'rolling_vol_unlevered.png',
    'Scatter vs BTC/ETH': 'scatter_strategy_vs_btc_eth.png',
    'Monthly Returns Heatmap': 'monthly_returns_heatmap.png',
    'Drawdown': 'drawdown_unlevered.png'
}

selected_plot_file = plot_files.get(plot_choices[0])
selected_plot = st.sidebar.selectbox('Select plot', list(plot_files.keys()))
selected_plot_file = plot_files[selected_plot]

full_plot_path = os.path.join(selected_plot_file)

if os.path.exists(full_plot_path):
    st.subheader(selected_plot)
    img = Image.open(full_plot_path)
    st.image(img, use_container_width=True)
else:
    st.warning(f"Plot not found: {full_plot_path}")

# Additional Information Section
st.sidebar.header('Strategy Information')
st.sidebar.info("""
This dashboard visualizes the key metrics and plots generated by the quantitative trading strategy evaluation pipeline.
- Metrics include returns, Sharpe ratio, volatility, and factor correlations.
- Interactive selection of plots enables easy analysis.
""")
